PREHOOK: query: CREATE TABLE srcbucket_mapjoin(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin(key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 2 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin
PREHOOK: query: CREATE TABLE srcbucket_mapjoin_part (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
PREHOOK: type: CREATETABLE
PREHOOK: Output: database:default
POSTHOOK: query: CREATE TABLE srcbucket_mapjoin_part (key int, value string) partitioned by (ds string) CLUSTERED BY (key) INTO 4 BUCKETS STORED AS TEXTFILE
POSTHOOK: type: CREATETABLE
POSTHOOK: Output: database:default
POSTHOOK: Output: default@srcbucket_mapjoin_part
PREHOOK: query: load data local inpath '../../data/files/srcbucket20.txt' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin
POSTHOOK: query: load data local inpath '../../data/files/srcbucket20.txt' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin
POSTHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/srcbucket22.txt' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/srcbucket22.txt' INTO TABLE srcbucket_mapjoin partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/srcbucket20.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part
POSTHOOK: query: load data local inpath '../../data/files/srcbucket20.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/srcbucket21.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/srcbucket21.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/srcbucket22.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/srcbucket22.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: load data local inpath '../../data/files/srcbucket23.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
PREHOOK: type: LOAD
#### A masked pattern was here ####
PREHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
POSTHOOK: query: load data local inpath '../../data/files/srcbucket23.txt' INTO TABLE srcbucket_mapjoin_part partition(ds='2008-04-08')
POSTHOOK: type: LOAD
#### A masked pattern was here ####
POSTHOOK: Output: default@srcbucket_mapjoin_part@ds=2008-04-08
PREHOOK: query: explain extended
select a.key, a.value, b.value
from srcbucket_mapjoin a join srcbucket_mapjoin_part b
on a.key=b.key
PREHOOK: type: QUERY
POSTHOOK: query: explain extended
select a.key, a.value, b.value
from srcbucket_mapjoin a join srcbucket_mapjoin_part b
on a.key=b.key
POSTHOOK: type: QUERY
ABSTRACT SYNTAX TREE:
  
TOK_QUERY
   TOK_FROM
      TOK_JOIN
         TOK_TABREF
            TOK_TABNAME
               srcbucket_mapjoin
            a
         TOK_TABREF
            TOK_TABNAME
               srcbucket_mapjoin_part
            b
         =
            .
               TOK_TABLE_OR_COL
                  a
               key
            .
               TOK_TABLE_OR_COL
                  b
               key
   TOK_INSERT
      TOK_DESTINATION
         TOK_DIR
            TOK_TMP_FILE
      TOK_SELECT
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               key
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  a
               value
         TOK_SELEXPR
            .
               TOK_TABLE_OR_COL
                  b
               value


STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 is a root stage

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Map 1 <- Map 2 (CUSTOM_EDGE)
#### A masked pattern was here ####
      Vertices:
        Map 1 
            Map Operator Tree:
                TableScan
                  alias: b
                  Statistics: Num rows: 55 Data size: 5812 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Map Join Operator
                    condition map:
                         Inner Join 0 to 1
                    condition expressions:
                      0 {key} {value}
                      1 {value}
                    keys:
                      0 key (type: int)
                      1 key (type: int)
                    outputColumnNames: _col0, _col1, _col6
                    Position of Big Table: 1
                    Statistics: Num rows: 60 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                    BucketMapJoin: true
                    Select Operator
                      expressions: _col0 (type: int), _col1 (type: string), _col6 (type: string)
                      outputColumnNames: _col0, _col1, _col2
                      Statistics: Num rows: 60 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
                      File Output Operator
                        compressed: false
                        GlobalTableId: 0
#### A masked pattern was here ####
                        NumFilesPerFileSink: 1
                        Statistics: Num rows: 60 Data size: 6393 Basic stats: COMPLETE Column stats: NONE
#### A masked pattern was here ####
                        table:
                            input format: org.apache.hadoop.mapred.TextInputFormat
                            output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                            properties:
                              columns _col0,_col1,_col2
                              columns.types int:string:string
                              escape.delim \
                              hive.serialization.extend.nesting.levels true
                              serialization.format 1
                              serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                            serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                        TotalFiles: 1
                        GatherStats: false
                        MultiFileSpray: false
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    COLUMN_STATS_ACCURATE true
                    bucket_count 4
                    bucket_field_name key
                    columns key,value
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin_part
                    numFiles 4
                    numRows 0
                    partition_columns ds
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin_part { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 5812
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 4
                      bucket_field_name key
                      columns key,value
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin_part
                      partition_columns ds
                      serialization.ddl struct srcbucket_mapjoin_part { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin_part
                  name: default.srcbucket_mapjoin_part
            Truncated Path -> Alias:
              /srcbucket_mapjoin_part/ds=2008-04-08 [b]
        Map 2 
            Map Operator Tree:
                TableScan
                  alias: a
                  Statistics: Num rows: 27 Data size: 2808 Basic stats: COMPLETE Column stats: NONE
                  GatherStats: false
                  Reduce Output Operator
                    key expressions: key (type: int)
                    sort order: +
                    Map-reduce partition columns: key (type: int)
                    Statistics: Num rows: 27 Data size: 2808 Basic stats: COMPLETE Column stats: NONE
                    tag: 0
                    value expressions: key (type: int), value (type: string)
            Path -> Alias:
#### A masked pattern was here ####
            Path -> Partition:
#### A masked pattern was here ####
                Partition
                  input format: org.apache.hadoop.mapred.TextInputFormat
                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                  partition values:
                    ds 2008-04-08
                  properties:
                    COLUMN_STATS_ACCURATE true
                    bucket_count 2
                    bucket_field_name key
                    columns key,value
                    columns.types int:string
#### A masked pattern was here ####
                    name default.srcbucket_mapjoin
                    numFiles 2
                    numRows 0
                    partition_columns ds
                    rawDataSize 0
                    serialization.ddl struct srcbucket_mapjoin { i32 key, string value}
                    serialization.format 1
                    serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    totalSize 2808
#### A masked pattern was here ####
                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                
                    input format: org.apache.hadoop.mapred.TextInputFormat
                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
                    properties:
                      bucket_count 2
                      bucket_field_name key
                      columns key,value
                      columns.types int:string
#### A masked pattern was here ####
                      name default.srcbucket_mapjoin
                      partition_columns ds
                      serialization.ddl struct srcbucket_mapjoin { i32 key, string value}
                      serialization.format 1
                      serialization.lib org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
#### A masked pattern was here ####
                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
                    name: default.srcbucket_mapjoin
                  name: default.srcbucket_mapjoin
            Truncated Path -> Alias:
              /srcbucket_mapjoin/ds=2008-04-08 [a]

  Stage: Stage-0
    Fetch Operator
      limit: -1

PREHOOK: query: select a.key, a.value, b.value
from srcbucket_mapjoin a join srcbucket_mapjoin_part b
on a.key=b.key
PREHOOK: type: QUERY
PREHOOK: Input: default@srcbucket_mapjoin
PREHOOK: Input: default@srcbucket_mapjoin@ds=2008-04-08
PREHOOK: Input: default@srcbucket_mapjoin_part
PREHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
#### A masked pattern was here ####
POSTHOOK: query: select a.key, a.value, b.value
from srcbucket_mapjoin a join srcbucket_mapjoin_part b
on a.key=b.key
POSTHOOK: type: QUERY
POSTHOOK: Input: default@srcbucket_mapjoin
POSTHOOK: Input: default@srcbucket_mapjoin@ds=2008-04-08
POSTHOOK: Input: default@srcbucket_mapjoin_part
POSTHOOK: Input: default@srcbucket_mapjoin_part@ds=2008-04-08
#### A masked pattern was here ####
86	val_86	val_86
255	val_255	val_255
255	val_255	val_255
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
369	val_369	val_369
369	val_369	val_369
369	val_369	val_369
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
152	val_152	val_152
152	val_152	val_152
145	val_145	val_145
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
82	val_82	val_82
417	val_417	val_417
417	val_417	val_417
417	val_417	val_417
219	val_219	val_219
219	val_219	val_219
446	val_446	val_446
394	val_394	val_394
237	val_237	val_237
237	val_237	val_237
482	val_482	val_482
174	val_174	val_174
174	val_174	val_174
413	val_413	val_413
413	val_413	val_413
208	val_208	val_208
208	val_208	val_208
208	val_208	val_208
174	val_174	val_174
174	val_174	val_174
417	val_417	val_417
417	val_417	val_417
417	val_417	val_417
365	val_365	val_365
266	val_266	val_266
439	val_439	val_439
439	val_439	val_439
325	val_325	val_325
325	val_325	val_325
167	val_167	val_167
167	val_167	val_167
167	val_167	val_167
475	val_475	val_475
17	val_17	val_17
57	val_57	val_57
149	val_149	val_149
149	val_149	val_149
170	val_170	val_170
20	val_20	val_20
280	val_280	val_280
280	val_280	val_280
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
208	val_208	val_208
208	val_208	val_208
208	val_208	val_208
192	val_192	val_192
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
318	val_318	val_318
318	val_318	val_318
318	val_318	val_318
332	val_332	val_332
284	val_284	val_284
181	val_181	val_181
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
208	val_208	val_208
208	val_208	val_208
208	val_208	val_208
24	val_24	val_24
24	val_24	val_24
431	val_431	val_431
431	val_431	val_431
431	val_431	val_431
42	val_42	val_42
42	val_42	val_42
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
156	val_156	val_156
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
196	val_196	val_196
288	val_288	val_288
288	val_288	val_288
457	val_457	val_457
318	val_318	val_318
318	val_318	val_318
318	val_318	val_318
318	val_318	val_318
318	val_318	val_318
318	val_318	val_318
369	val_369	val_369
369	val_369	val_369
369	val_369	val_369
413	val_413	val_413
413	val_413	val_413
134	val_134	val_134
134	val_134	val_134
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
307	val_307	val_307
307	val_307	val_307
435	val_435	val_435
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
369	val_369	val_369
369	val_369	val_369
369	val_369	val_369
226	val_226	val_226
497	val_497	val_497
402	val_402	val_402
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
336	val_336	val_336
233	val_233	val_233
233	val_233	val_233
42	val_42	val_42
42	val_42	val_42
321	val_321	val_321
321	val_321	val_321
149	val_149	val_149
149	val_149	val_149
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
138	val_138	val_138
453	val_453	val_453
64	val_64	val_64
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
167	val_167	val_167
167	val_167	val_167
167	val_167	val_167
219	val_219	val_219
219	val_219	val_219
116	val_116	val_116
288	val_288	val_288
288	val_288	val_288
244	val_244	val_244
280	val_280	val_280
280	val_280	val_280
2	val_2	val_2
35	val_35	val_35
35	val_35	val_35
35	val_35	val_35
321	val_321	val_321
321	val_321	val_321
53	val_53	val_53
105	val_105	val_105
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
262	val_262	val_262
424	val_424	val_424
424	val_424	val_424
431	val_431	val_431
431	val_431	val_431
431	val_431	val_431
431	val_431	val_431
431	val_431	val_431
431	val_431	val_431
424	val_424	val_424
424	val_424	val_424
291	val_291	val_291
24	val_24	val_24
24	val_24	val_24
255	val_255	val_255
255	val_255	val_255
163	val_163	val_163
200	val_200	val_200
200	val_200	val_200
237	val_237	val_237
237	val_237	val_237
439	val_439	val_439
439	val_439	val_439
248	val_248	val_248
479	val_479	val_479
417	val_417	val_417
417	val_417	val_417
417	val_417	val_417
325	val_325	val_325
325	val_325	val_325
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
277	val_277	val_277
178	val_178	val_178
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
468	val_468	val_468
310	val_310	val_310
493	val_493	val_493
460	val_460	val_460
233	val_233	val_233
233	val_233	val_233
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
406	val_406	val_406
189	val_189	val_189
134	val_134	val_134
134	val_134	val_134
167	val_167	val_167
167	val_167	val_167
167	val_167	val_167
273	val_273	val_273
273	val_273	val_273
273	val_273	val_273
97	val_97	val_97
97	val_97	val_97
28	val_28	val_28
152	val_152	val_152
152	val_152	val_152
307	val_307	val_307
307	val_307	val_307
222	val_222	val_222
200	val_200	val_200
200	val_200	val_200
97	val_97	val_97
97	val_97	val_97
165	val_165	val_165
165	val_165	val_165
484	val_484	val_484
150	val_150	val_150
224	val_224	val_224
224	val_224	val_224
66	val_66	val_66
213	val_213	val_213
213	val_213	val_213
374	val_374	val_374
495	val_495	val_495
37	val_37	val_37
37	val_37	val_37
327	val_327	val_327
327	val_327	val_327
327	val_327	val_327
15	val_15	val_15
15	val_15	val_15
338	val_338	val_338
459	val_459	val_459
459	val_459	val_459
466	val_466	val_466
466	val_466	val_466
466	val_466	val_466
396	val_396	val_396
396	val_396	val_396
396	val_396	val_396
309	val_309	val_309
309	val_309	val_309
367	val_367	val_367
367	val_367	val_367
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
455	val_455	val_455
316	val_316	val_316
316	val_316	val_316
316	val_316	val_316
345	val_345	val_345
129	val_129	val_129
129	val_129	val_129
378	val_378	val_378
4	val_4	val_4
356	val_356	val_356
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
125	val_125	val_125
125	val_125	val_125
437	val_437	val_437
286	val_286	val_286
187	val_187	val_187
187	val_187	val_187
187	val_187	val_187
176	val_176	val_176
176	val_176	val_176
459	val_459	val_459
459	val_459	val_459
51	val_51	val_51
51	val_51	val_51
103	val_103	val_103
103	val_103	val_103
239	val_239	val_239
239	val_239	val_239
213	val_213	val_213
213	val_213	val_213
176	val_176	val_176
176	val_176	val_176
275	val_275	val_275
260	val_260	val_260
404	val_404	val_404
404	val_404	val_404
217	val_217	val_217
217	val_217	val_217
84	val_84	val_84
84	val_84	val_84
466	val_466	val_466
466	val_466	val_466
466	val_466	val_466
8	val_8	val_8
411	val_411	val_411
172	val_172	val_172
172	val_172	val_172
129	val_129	val_129
129	val_129	val_129
158	val_158	val_158
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
26	val_26	val_26
26	val_26	val_26
165	val_165	val_165
165	val_165	val_165
327	val_327	val_327
327	val_327	val_327
327	val_327	val_327
51	val_51	val_51
51	val_51	val_51
404	val_404	val_404
404	val_404	val_404
95	val_95	val_95
95	val_95	val_95
282	val_282	val_282
282	val_282	val_282
187	val_187	val_187
187	val_187	val_187
187	val_187	val_187
316	val_316	val_316
316	val_316	val_316
316	val_316	val_316
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
77	val_77	val_77
0	val_0	val_0
0	val_0	val_0
0	val_0	val_0
118	val_118	val_118
118	val_118	val_118
282	val_282	val_282
282	val_282	val_282
419	val_419	val_419
15	val_15	val_15
15	val_15	val_15
118	val_118	val_118
118	val_118	val_118
19	val_19	val_19
224	val_224	val_224
224	val_224	val_224
309	val_309	val_309
309	val_309	val_309
389	val_389	val_389
327	val_327	val_327
327	val_327	val_327
327	val_327	val_327
242	val_242	val_242
242	val_242	val_242
392	val_392	val_392
242	val_242	val_242
242	val_242	val_242
396	val_396	val_396
396	val_396	val_396
396	val_396	val_396
95	val_95	val_95
95	val_95	val_95
11	val_11	val_11
143	val_143	val_143
228	val_228	val_228
33	val_33	val_33
103	val_103	val_103
103	val_103	val_103
367	val_367	val_367
367	val_367	val_367
239	val_239	val_239
239	val_239	val_239
480	val_480	val_480
480	val_480	val_480
480	val_480	val_480
202	val_202	val_202
316	val_316	val_316
316	val_316	val_316
316	val_316	val_316
235	val_235	val_235
80	val_80	val_80
44	val_44	val_44
466	val_466	val_466
466	val_466	val_466
466	val_466	val_466
257	val_257	val_257
190	val_190	val_190
114	val_114	val_114
396	val_396	val_396
396	val_396	val_396
396	val_396	val_396
217	val_217	val_217
217	val_217	val_217
125	val_125	val_125
125	val_125	val_125
187	val_187	val_187
187	val_187	val_187
187	val_187	val_187
480	val_480	val_480
480	val_480	val_480
480	val_480	val_480
491	val_491	val_491
305	val_305	val_305
444	val_444	val_444
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
323	val_323	val_323
480	val_480	val_480
480	val_480	val_480
480	val_480	val_480
136	val_136	val_136
172	val_172	val_172
172	val_172	val_172
462	val_462	val_462
462	val_462	val_462
26	val_26	val_26
26	val_26	val_26
462	val_462	val_462
462	val_462	val_462
341	val_341	val_341
183	val_183	val_183
84	val_84	val_84
84	val_84	val_84
37	val_37	val_37
37	val_37	val_37
448	val_448	val_448
194	val_194	val_194
477	val_477	val_477
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
169	val_169	val_169
400	val_400	val_400
