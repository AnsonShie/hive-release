<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.hive</groupId>
    <artifactId>hive-it</artifactId>
    <version>1.2.1.2.3.4.0-3485</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>hive-it-qfile</artifactId>
  <packaging>jar</packaging>
  <name>Hive Integration - QFile Tests</name>

  <properties>
    <hive.path.to.root>../..</hive.path.to.root>

    <qfile />
    <qfile_regex />
    <run_disabled>false</run_disabled>
    <clustermode />
    <execute.beeline.tests>false</execute.beeline.tests>
  </properties>

  <dependencies>
    <!-- dependencies are always listed in sorted order by groupId, artifectId -->
    <!-- test intra-project -->
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-ant</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-common</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-contrib</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-metastore</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-it-custom-serde</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-it-util</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-serde</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- test inter-project -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <profiles>
    <profile>
      <!-- replaces -Dclustermode=minimr which I am sure sure was used? -->
      <id>minimr</id>
      <properties>
        <test.warehouse.scheme />
      </properties>
    </profile>
    <profile>
      <id>hadoop-1</id>
      <properties>
        <active.hadoop.version>${hadoop-20S.version}</active.hadoop.version>
        <test.dfs.mkdir>-mkdir</test.dfs.mkdir>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-core</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-test</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-tools</artifactId>
          <version>${hadoop-20S.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop1-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop1-compat</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop1.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>hadoop-2</id>
      <properties>
        <active.hadoop.version>${hadoop-23.version}</active.hadoop.version>
        <test.dfs.mkdir>-mkdir -p</test.dfs.mkdir>
      </properties>
      <dependencies>
        <dependency>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-servlet</artifactId>
          <version>${jersey.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-archives</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-distcp</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-jobclient</artifactId>
          <version>${hadoop-23.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-hs</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-mapreduce-client-core</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
          <version>${commons-logging.version}</version>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-server-tests</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-yarn-client</artifactId>
          <version>${hadoop-23.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-common</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop2-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-hadoop2-compat</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
          <classifier>tests</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase-server</artifactId>
          <version>${hbase.hadoop2.version}</version>
          <classifier>tests</classifier>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId> 
          <artifactId>tez-tests</artifactId>
          <version>${tez.version}</version>
          <type>test-jar</type>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-api</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-runtime-library</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-mapreduce</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
        <dependency> 
          <groupId>org.apache.tez</groupId>
          <artifactId>tez-dag</artifactId>
          <version>${tez.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>read-project-properties</goal>
            </goals>
            <configuration>
              <files>
                <file>${basedir}/../src/test/resources/testconfiguration.properties</file>
              </files>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-tests-sources</id>
            <phase>generate-test-sources</phase>
            <configuration>
              <target>
                <property name="test.classpath" refid="maven.test.classpath" />
                <echo message="${test.classpath}" />
                <taskdef classpathref="maven.plugin.classpath" resource="net/sf/antcontrib/antcontrib.properties" />
                <taskdef classname="org.apache.hadoop.hive.ant.QTestGenTask" classpath="${test.classpath}" name="qtestgen" />
                <mkdir dir="${project.build.directory}/qfile-results/clientpositive/" />
                <mkdir dir="${project.build.directory}/qfile-results/clientnegative/" />
                <mkdir dir="${project.build.directory}/qfile-results/clientcompare" />
                <mkdir dir="${project.build.directory}/qfile-results/positive/" />
                <mkdir dir="${project.build.directory}/qfile-results/negative/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/positive/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/negative/" />
                <mkdir dir="${project.build.directory}/qfile-results/hbase-handler/minimrpositive/" />

                <mkdir dir="${project.build.directory}/qfile-results/contribpositive" />
                <mkdir dir="${project.build.directory}/qfile-results/contribnegative" />
                <mkdir dir="${project.build.directory}/qfile-results/contribclientpositive" />
                <mkdir dir="${project.build.directory}/qfile-results/contribclientnegative" />

                <!-- Negative Parse -->
                <qtestgen className="TestParseNegative" cleanupScript="q_test_cleanup.sql" hadoopVersion="${active.hadoop.version}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/negative/" logFile="${project.build.directory}/testparseneggen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/ql/parse/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/negative/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/compiler/errors/" runDisabled="${run_disabled}" template="TestParseNegative.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <!-- Cli -->
                <qtestgen className="TestCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" excludeQueryFile="${minimr.query.files},${minitez.query.files},${encrypted.query.files}" hadoopVersion="${active.hadoop.version}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientpositive/" logFile="${project.build.directory}/testclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" runDisabled="${run_disabled}" template="TestCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <!-- Negative Cli -->
                <qtestgen className="TestNegativeCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" excludeQueryFile="${minimr.query.negative.files}" hadoopVersion="${active.hadoop.version}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientnegative/" logFile="${project.build.directory}/testnegativeclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientnegative/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientnegative/" runDisabled="${run_disabled}" template="TestNegativeCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <!-- Compare Cli -->
                <qtestgen className="TestCompareCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" hadoopVersion="${active.hadoop.version}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientcompare/" logFile="${project.build.directory}/testcompareclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientcompare/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" runDisabled="${run_disabled}" template="TestCompareCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <!-- Minimr -->
                <qtestgen className="TestMinimrCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="miniMR" hadoopVersion="${active.hadoop.version}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" includeQueryFile="${minimr.query.files}" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientpositive/" logFile="${project.build.directory}/testminimrclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" runDisabled="${run_disabled}" template="TestCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <if>
                  <equals arg1="${active.hadoop.version}" arg2="${hadoop-23.version}" />
                  <then>
                    <qtestgen className="TestMiniTezCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="tez" hadoopVersion="${active.hadoop.version}" hiveConfDir="${basedir}/${hive.path.to.root}/data/conf/tez" hiveRootDirectory="${basedir}/${hive.path.to.root}/" includeQueryFile="${minitez.query.files},${minitez.query.files.shared}" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientpositive/" logFile="${project.build.directory}/testminitezclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/tez" runDisabled="${run_disabled}" template="TestCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                    <qtestgen className="TestEncryptedHDFSCliDriver" cleanupScript="q_test_cleanup_for_encryption.sql" clusterMode="encrypted" hadoopVersion="${active.hadoop.version}" hiveConfDir="${basedir}/${hive.path.to.root}/data/conf" hiveRootDirectory="${basedir}/${hive.path.to.root}/" includeQueryFile="${encrypted.query.files}" initScript="q_test_init_for_encryption.sql" logDirectory="${project.build.directory}/qfile-results/clientpositive/" logFile="${project.build.directory}/testencryptedhdfsclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/encrypted" runDisabled="${run_disabled}" template="TestCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />
                  </then>
                  <else>
                  </else>
                </if>

                <!-- Negative Minimr -->
                <qtestgen className="TestNegativeMinimrCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="miniMR" hadoopVersion="${hadoopVersion}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" includeQueryFile="${minimr.query.negative.files}" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/clientnegative/" logFile="${project.build.directory}/testnegativeminimrclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientnegative/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientnegative/" runDisabled="${run_disabled}" template="TestNegativeCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <!-- HBase Positive -->
                <qtestgen className="TestHBaseCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/hbase-handler/positive/" logFile="${project.build.directory}/testhbaseclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/positive/" queryFile="${qfile}" resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/positive/" runDisabled="${run_disabled}" template="TestHBaseCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" />

                <!-- HBase Minimr -->
                <qtestgen className="TestHBaseMinimrCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="miniMR" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/hbase-handler/minimrpositive/" logFile="${project.build.directory}/testhbaseminimrclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/positive/" queryFile="hbase_bulk.m" resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/positive/" runDisabled="${run_disabled}" template="TestHBaseCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" />

                <!-- HBase Negative -->
                <qtestgen className="TestHBaseNegativeCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/hbase-handler/negative" logFile="${project.build.directory}/testhbasenegativeclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli/" queryDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/queries/negative/" queryFile="${qfile}" resultsDirectory="${basedir}/${hive.path.to.root}/hbase-handler/src/test/results/negative/" runDisabled="${run_disabled}" template="TestHBaseNegativeCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/hbase-handler/src/test/templates/" />

                <!-- Beeline -->
                <if>
                  <equals arg1="${execute.beeline.tests}" arg2="true" />
                    <then>
                      <qtestgen className="TestBeeLineDriver" clusterMode="${clustermode}" excludeQueryFile="${beeline.positive.exclude}" hadoopVersion="${hadoopVersion}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" logDirectory="${project.build.directory}/qfile-results/beelinepositive/" logFile="${project.build.directory}/testbeelinedrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hive/beeline/util/" queryDirectory="${basedir}/${hive.path.to.root}/ql/src/test/queries/clientpositive/" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/ql/src/test/results/clientpositive/" runDisabled="${run_disabled}" template="TestBeeLineDriver.vm" templatePath="${ql.test.template.dir}" />
                    </then>
                </if>



                <qtestgen className="TestContribCliDriver" cleanupScript="q_test_cleanup.sql" clusterMode="${clustermode}" hadoopVersion="${hadoopVersion}" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/contribclientpositive" logFile="${project.build.directory}/testcontribclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli" queryDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/queries/clientpositive" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/results/clientpositive/" runDisabled="${run_disabled}" template="TestCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />

                <qtestgen className="TestContribNegativeCliDriver" cleanupScript="q_test_cleanup.sql" hiveRootDirectory="${basedir}/${hive.path.to.root}/" initScript="q_test_init.sql" logDirectory="${project.build.directory}/qfile-results/contribclientnegative" logFile="${project.build.directory}/testcontribnegclidrivergen.log" outputDirectory="${project.build.directory}/generated-test-sources/java/org/apache/hadoop/hive/cli" queryDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/queries/clientnegative" queryFile="${qfile}" queryFileRegex="${qfile_regex}" resultsDirectory="${basedir}/${hive.path.to.root}/contrib/src/test/results/clientnegative/" runDisabled="${run_disabled}" template="TestNegativeCliDriver.vm" templatePath="${basedir}/${hive.path.to.root}/ql/src/test/templates/" />


              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.build-helper.plugin.version}</version>
        <executions>
          <execution>
            <id>add-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>target/generated-test-sources/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>